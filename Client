import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.Socket;
import java.util.Scanner;

public class Client {
    private Socket socket;
    private PrintWriter out;
    private BufferedReader in;

    public Client(String hostname, int port) throws IOException {
        this.socket = new Socket(hostname, port);
        this.out = new PrintWriter(socket.getOutputStream(), true);
        this.in = new BufferedReader(new InputStreamReader(socket.getInputStream()));
    }

    public void start() {
        Thread listenerThread = new Thread(new ServerListener());
        listenerThread.start();


        try (Scanner scanner = new Scanner(System.in)) {
            System.out.println("Connected to the server");
            String message;
            while (true) {
                message = scanner.nextLine();
                if (message.equalsIgnoreCase("/quit")) {
                    System.out.println("Disconnecting from server");
                    out.println("/quit");
                    break;
                } else {
                    out.println(message);
                }
            }
        } catch (Exception e) {
            System.out.println("Error: " + e.getMessage());
        } finally {
            disconnect();
        }
    }
    public void disconnect() {
        try {
            in.close();
            out.close();
            socket.close();
            System.out.println("Disconnected from server");
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
    private class ServerListener implements Runnable {

        @Override
        public void run() {
            try {
                String serverMessage;
                while ((serverMessage = in.readLine()) != null) {
                    System.out.println(serverMessage);
                }
            } catch (IOException e) {
                System.out.println("Connection Error:" + e.getMessage());
            } finally {
                disconnect();
            }
        }
    }

    public static void main(String[] args) {
        String hostname = "localhost";
        int port = 5000;
        try {
            Client client = new Client(hostname, port);
            client.start();
        } catch (IOException e) {
            System.out.println("Unable to connect with server: " + e.getMessage());
        }
    }
}
